{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"A_Scr",
				"A_ScreenHeight"
			],
			[
				"A_Scree",
				"A_ScreenWidth"
			],
			[
				"mouse",
				"MouseClick"
			],
			[
				"prop",
				"properties"
			],
			[
				"exit",
				"ExitApp"
			],
			[
				"%A%",
				"%A_LoopFileFullPath%"
			],
			[
				"imagef",
				"imageFilePath"
			],
			[
				"Trayi",
				"TrayTip"
			],
			[
				"Resol",
				"ResolutionChanger"
			],
			[
				"tr",
				"Tray"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Windows Registry Editor Version 5.00\n\n[HKEY_CURRENT_USER\\Software\\Falcom]\n\n[HKEY_CURRENT_USER\\Software\\Falcom\\Fsetup]\n\"DisplayName\"=\"Fsetup\"\n\"Path\"=\"D:\\\\\"\n\"ZWEI\"=\"D:\\\\download\\\\FALCOM ZWEI\\\\ZWEI\"\n\n[HKEY_CURRENT_USER\\Software\\Falcom\\ZWEI]\n\"Path\"=\"D:\\\\download\\\\FALCOM ZWEI\\\\ZWEI\"\n\n",
			"file": "/D/download/FALCOM ZWEI/ZWEI/REG 등록(32,64bit 공용).reg",
			"file_size": 586,
			"file_write_time": 130859439415225931,
			"settings":
			{
				"buffer_size": 280,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#NoEnv\n\nfileIni := A_ScriptDir \"\\Run.ini\"\nfileReg := A_ScriptDir \"\\Run.reg\"\n\nprop := readProperties( fileIni )\n\n; set default\nprop[ \"cd\" ] := A_ScriptDir\n\nsetRegistry( fileReg, prop )\n\nrunProgram( fileIni, prop )\n\n\nExitApp\n\n\nrunProgram( fileIni, properties ) {\n\n	IniRead, resolution,  %fileIni%, init, resolution\n	if ( resolution != \"ERROR\" && resolution != \"\" ) {\n    	width  := Trim( RegExReplace( resolution, \"i)^(.*?)x.*?$\", \"$1\" ) )\n    	height := Trim( RegExReplace( resolution, \"i)^.*?x(.*?)$\", \"$1\" ) )\n		ResolutionChanger.change( width, height )\n	}\n\n\n	IniRead, execPath,  %fileIni%, init, executor\n	IniRead, isRunWait, %fileIni%, init, runWait\n	\n	if ( execPath != \"ERROR\" && execPath != \"\" ) {\n		\n		execPath := bindValue( execPath, properties )\n		SplitPath, execPath, , execDir\n		\n		if ( isRunWait == \"true\" || (resolution != \"ERROR\" && resolution != \"\") )\n		{\n			RunWait %execPath%, %execDir%\n			;MsgBox % \"RunWait : \" isRunWait \",\" resolution\n			;Run %execPath%, %execDir%\n			ResolutionChanger.restore()\n		} else {\n			Run %execPath%, %execDir%\n			;msgbox Run\n		}\n\n		;msgbox % \"isRunWait:\" isRunWait  \", resolution:\" resolution \", result:\"  ( isRunWait != true )\n\n	}\n\n\n\n}\n\n\nisFile( path ) {\n\n	IfNotExist %path%, return false\n\n	FileGetAttrib, attr, %path%\n	\n	Return ! InStr( attr, \"D\" )\n\n}\n\nreadProperties( file ) {\n\n	prop     := []tryrfgt ytuh\n	readMode := false\n\n	Loop, Read, %file%\n	{\n\n		if RegExMatch(A_LoopReadLine, \"^#.*\" )\n			continue\n\n		if ( readMode == false ) {\n			if RegExMatch(A_LoopReadLine, \"i)^\\[properties\\]\" )\n				readMode = true\n			continue\n		} else {\n			If RegExMatch(A_LoopReadLine, \"^\\[.*\\]\" ) {\n				readMode = false\n				continue\n			}\n		}\n\n    key := RegExReplace( A_LoopReadLine, \"^(.*?)=.*?$\", \"$1\" )\n    val := RegExReplace( A_LoopReadLine, \"^.*?=(.*?)$\", \"$1\" )\n\n		prop[ Trim(key) ] := Trim(val)\n\n	}\n\n	return prop\n\n}\n\n/**\n* Write Registry from file \n*\n* @param file       {String} filePath contains data formatted Windows Registry\n* @param properties {Array}  properties to bind\n*/\nsetRegistry( file, properties ) {\n\n	regKey       := \"\"\n	readNextLine := false\n	isHex        := true\n\n	Loop, Read, %file%\n	{\n\n		if RegExMatch(A_LoopReadLine, \"^Windows Registry Editor\" ) {\n			continue\n		} else if ( StrLen(A_LoopReadLine) == 0 ) {\n			Continue\n		} else if RegExMatch(A_LoopReadLine, \"^\\[.*\\]\" ) {\n			regKey := RegExReplace( A_LoopReadLine, \"^\\[(.*)\\]\", \"$1\" )\n			continue\n		} else if ( regKey == \"\" ) {\n			continue\n		}\n\n		if ( readNextLine == true ) {\n			regVal := regVal A_LoopReadLine\n		} else {\n	\n			regName := RegExReplace( RegExReplace( A_LoopReadLine, \"^\"\"(.*?)\"\"=.*$\", \"$1\" ), \"\\\\\"\"\", \"\"\"\" )\n			;regName := RegExReplace( A_LoopReadLine, \"^\"\"(.*?)\"\"=.*$\", \"$1\" )\n			regVal  := RegExReplace( A_LoopReadLine, \"^\"\".*?\"\"=(.*)$\", \"$1\" )\n			regType := \"REG_SZ\"\n			\n			if RegExMatch( regVal, \"^\"\".*\"\"$\" ) {\n				regType := \"REG_SZ\"\n				regVal  := bindValue( RegExReplace( regVal, \"^\"\"(.*)\"\"$\", \"$1\" ), properties )\n				isHex   := false\n			} else if RegExMatch( regVal, \"^dword:\" ) {\n				regType := \"REG_DWORD\"\n				regVal  := RegExReplace( regVal, \"^dword:(.*)$\", \"$1\" )\n				isHex   := false\n			} else if RegExMatch( regVal, \"^hex\\(b\\):\" ) {\n				regType := \"REG_QWORD\"\n				regVal  := RegExReplace( regVal, \"^hex\\(b\\):(.*)$\", \"$1\" )\n				isHex   := true\n			} else if RegExMatch( regVal, \"^hex\\(7\\):\" ) {\n				regType := \"REG_MULTI_SZ\"\n				regVal  := RegExReplace( regVal, \"^hex\\(7\\):(.*)$\", \"$1\" )\n				isHex   := true\n			} else if RegExMatch( regVal, \"^hex\\(2\\):\" ) {\n				regType := \"REG_EXPAND_SZ\"\n				regVal  := RegExReplace( regVal, \"^hex\\(2\\):(.*)$\", \"$1\" )\n				isHex   := true\n			} else if RegExMatch( regVal, \"^hex:\" ) {\n				regType := \"REG_BINARY\"\n				regVal  := RegExReplace( regVal, \"^hex:(.*)$\", \"$1\" )\n				isHex   := true\n			}\n			\n		}\n\n		if ( RegExMatch(regVal, \"^.*\\\\$\") ) {\n      		readNextLine := true\n      		continue\n		} else {\n			readNextLine := false\n		}\n\n		if ( isHex == true ) {\n			regVal := RegExReplace( regVal, \"[\\\\\\t ]\", \"\" )\n\n			if ( regType == \"REG_QWORD\" ) {\n				;; Not Working !!\n				regVal := toNumberFromHex( regVal )\n			} else {\n				regVal := toStringFromHex( regVal )\n			}\n\n		}\n\n		RegWrite, % regType, % regKey, % regName, % regVal\n\n	}\n\n}\n\nbindValue( value, properties ) {\n\n	For key, val in properties\n		value := StrReplace( value, \"#{\" key \"}\", val )\n\n	return value\n\n}\n\ntoStringFromHex( hexValue ) {\n\n  if ! hexValue\n    return 0\n\n  array := StrSplit( hexValue, \",\" )\n\n  if ( mod( array.MaxIndex(), 2 ) != 0 ) {\n  	array.Insert( \"00\" )\n  }\n\n  result := \"\"\n\n  for i, element in array\n  {\n  	if ( mod(i,2) == 0 )\n  		Continue\n\n  	result := result chr( \"0x\" array[i + 1] array[i] )\n  }\n\n  return result\n\n}\n\ntoNumberFromHex( hexValue ) {\n\n  if ! hexValue\n    return 0\n\n  array := StrSplit( hexValue, \",\" )\n\n  if ( mod( array.MaxIndex(), 2 ) != 0 ) {\n  	array.Insert( \"00\" )\n  }\n\n  result := \"\"\n\n  for i, element in array\n  {\n  	if ( mod(i,2) == 0 )\n  		Continue\n\n  	result := array[i + 1] array[i] result\n\n  }\n\n  ;return \"0x\" result\n  return \"0x0000000c\"\n\n}\n\nconvertBase( fromBase, toBase, number )\n{\n    static u := A_IsUnicode ? \"_wcstoui64\" : \"_strtoui64\"\n    static v := A_IsUnicode ? \"_i64tow\"    : \"_i64toa\"\n    VarSetCapacity(s, 65, 0)\n    value := DllCall(\"msvcrt.dll\\\" u, \"Str\", number, \"UInt\", 0, \"UInt\", fromBase, \"CDECL Int64\")\n    DllCall(\"msvcrt.dll\\\" v, \"Int64\", value, \"Str\", s, \"UInt\", toBase, \"CDECL\")\n    return s\n}\n\n\nclass ResolutionChanger {\n\n    static void := ResolutionChanger._init()\n\n    _init() {\n        this.srcWidth  := A_ScreenWidth\n        this.srcHeight := A_ScreenHeight\n    }\n  \n    __New() {\n        throw Exception( \"ResolutionChanger is a static class, dont instante it!\", -1 )\n    }\n\n\n    change( width, height ) {\n\n    	If ( RegExMatch(width, \"^\\d+$\") == false || RegExMatch(height, \"^\\d+$\") == false ) {\n    		MsgBox Resolution must be consisted with digit values ( input values : [%width%]x[%height%])\n    	    return\n    	}\n\n        VarSetCapacity( dM, 156, 0 )\n        NumPut( 156, dM, 36 )\n        NumPut( 0x5c0000, dM, 40 )\n        NumPut( width, dM, 108 )\n        NumPut( height, dM, 112 )\n        DllCall( \"ChangeDisplaySettingsA\", UInt,&dM, UInt,0 )\n    }\n  \n    /*\n    change( width, height, colorDepth:=32, Hz:=60 ) {\n        VarSetCapacity( dM,156,0 ), NumPut( 156,2,&dM,36 )\n        DllCall( \"EnumDisplaySettings\", UInt,0, UInt,-1, UInt,&dM ), NumPut(0x5c0000,dM,40)\n        NumPut(cD,dM,104),  NumPut(sW,dM,108),  NumPut(sH,dM,112),  NumPut(rR,dM,120)\n        Return DllCall( \"ChangeDisplaySettings\", UInt,&dM, UInt,0 )\n    }\n    */\n  \n    restore() {\n        if ( A_ScreenWidth != this.srcWidth || A_ScreenHeight != this.srcHeight ) {\n            this.change( this.srcWidth, this.srcHeight )\n        }\n    }\n\n}\n\n\n; Sends text to a console's input stream. WinTitle may specify any window in\n; the target process. Since each process may be attached to only one console,\n; ConsoleSend fails if the script is already attached to a console.\n\n; ConsoleSend( text, WinTitle=\"\", WinText=\"\", ExcludeTitle=\"\", ExcludeText=\"\" ) {\n\n;     WinGet, pid, PID, %WinTitle%, %WinText%, %ExcludeTitle%, %ExcludeText%\n;     if !pid\n;         return false, ErrorLevel:=\"window\"\n;     ; Attach to the console belonging to %WinTitle%'s process.\n;     if !DllCall(\"AttachConsole\", \"uint\", pid)\n;         return false, ErrorLevel:=\"AttachConsole\"\n;     hConIn := DllCall(\"CreateFile\", \"str\", \"CONIN$\", \"uint\", 0xC0000000\n;                 , \"uint\", 0x3, \"uint\", 0, \"uint\", 0x3, \"uint\", 0, \"uint\", 0)\n;     if hConIn = -1\n;         return false, ErrorLevel:=\"CreateFile\"\n    \n;     VarSetCapacity(ir, 24, 0)       ; ir := new INPUT_RECORD\n;     NumPut(1, ir, 0, \"UShort\")      ; ir.EventType := KEY_EVENT\n;     NumPut(1, ir, 8, \"UShort\")      ; ir.KeyEvent.wRepeatCount := 1\n;     ; wVirtualKeyCode, wVirtualScanCode and dwControlKeyState are not needed,\n;     ; so are left at the default value of zero.\n    \n;     Loop, Parse, text ; for each character in text\n;     {\n;         NumPut(Asc(A_LoopField), ir, 14, \"UShort\")\n        \n;         NumPut(true, ir, 4, \"Int\")  ; ir.KeyEvent.bKeyDown := true\n;         gosub ConsoleSendWrite\n        \n;         NumPut(false, ir, 4, \"Int\") ; ir.KeyEvent.bKeyDown := false\n;         gosub ConsoleSendWrite\n;     }\n;     gosub ConsoleSendCleanup\n;     return true\n    \n;     ConsoleSendWrite:\n;         if ! DllCall(\"WriteConsoleInput\", \"uint\", hconin, \"uint\", &ir, \"uint\", 1, \"uint*\", 0)\n;         {\n;             gosub ConsoleSendCleanup\n;             return false, ErrorLevel:=\"WriteConsoleInput\"\n;         }\n;     return\n    \n;     ConsoleSendCleanup:\n;         if (hConIn!=\"\" && hConIn!=-1)\n;             DllCall(\"CloseHandle\", \"uint\", hConIn)\n;         ; Detach from %WinTitle%'s console.\n;         DllCall(\"FreeConsole\")\n;     return\n\n; }",
			"file": "ZZ_Study/run/RUN.ahk",
			"file_size": 9111,
			"file_write_time": 130859496198189462,
			"settings":
			{
				"buffer_size": 8766,
				"line_ending": "Windows"
			}
		},
		{
			"file": "//NAS/Download/ps3netsrv/ps3netsrv/common.h",
			"settings":
			{
				"buffer_size": 2018,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/AutoHotkey/AutoHotkey.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Run"
				]
			],
			[
				"Packages/AutoHotkey/AutoHotkey.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"AutoHotkey - Compile"
			],
			[
				"run",
				"AutoHotkey - Run"
			],
			[
				"comp",
				"AutoHotkey - Compile"
			],
			[
				"autoh",
				"AutoHotkey - Run"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"auto",
				"AutoHotkey - Run"
			],
			[
				"add li",
				"SublimeGit: Add License"
			],
			[
				"remove p",
				"Package Control: Remove Package"
			],
			[
				"git:in",
				"Git: Init"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"git",
				"Github: Open File"
			],
			[
				"packagein",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"key",
				"Preferences: Key Bindings - Default"
			],
			[
				"key bin",
				"Preferences: Key Bindings - User"
			],
			[
				"setting",
				"Preferences: Settings - User"
			],
			[
				"pref",
				"Preferences: Settings - Default"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: add",
				"Package Control: Add Channel"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: up",
				"Package Control: Upgrade Package"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 341.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"sublime.version()",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"1 + 2",
			"\"1234\"",
			"sublime.version()",
			"sublime.version",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"//NAS/emul/emulator"
	],
	"file_history":
	[
		"/D/download/NARUTO SHIPPUDEN Ultimate Ninja STORM 3 Full Burst/RUN.ini",
		"/D/download/Sine Mora/RUN.ini",
		"/D/download/Commandos 2/RUN.ini",
		"/D/download/Halo/REG_X64.reg",
		"/D/download/Commandos 1/RUN.ini",
		"//NAS/emul/emulator/Apple2gs/ActiveGS/WrapperActiveGs.ahk",
		"/D/download/FALCOM ZWEI/RUN.ini",
		"/D/download/Metro 2033 Redux/RUN.ini",
		"/D/download/Metro 2033 Redux/RUN.reg",
		"/D/download/FALCOM ZWEI/RUN.ahk",
		"//NAS/emul/emulator/ZZ_Library/DiskContainer.ahk",
		"/D/download/FALCOM ZWEI/RUN.reg",
		"//NAS/emul/emulator/Apple2gs/ActiveGS/run.activegsxml",
		"//NAS/emul/emulator/Apple2gs/kegs 0.91-win working frame(no disk images)/src/protos_xdriver.h",
		"/D/download/FINAL FANTASY TYPE 0 HD/RUN.ini",
		"//NAS/emul/emulator/Apple2gs/ActiveGS/default.activegsxml",
		"/D/download/DIA/RUN.ini",
		"//NAS/emul/emulator/PlayStation/ePSXe 1.9.0/WrapperEpsxe.ahk",
		"//NAS/emul/emulator/PlayStation/ePSXe 1.9.25/WrapperEpsxe.ahk",
		"//NAS/emul/emulator/Mednafen/.gitignore",
		"/C/Users/Administrator/Documents/AutoHotkey/SciTE/Styles/tidRich_Zenburn.style.properties",
		"/D/download/DIA/readme.txt",
		"/D/download/Diablo 2/RUN.ini",
		"/D/download/Diablo 2/RUN.ahk",
		"/D/download/Diablo 2/레지 - 복사본.reg",
		"/D/download/Diablo 2/레지.reg",
		"/C/Users/Administrator/Documents/AutoHotkey/SciTE/Styles/PlasticCodeWrap.style.properties",
		"/C/NIDE/workspace/NayasisCore/hyperlaunch-3/Modules/ePSXe/ePSXe.ahk",
		"//NAS/emul/emulator/VirtualBox/.gitignore",
		"//NAS/emul/emulator/.gitignore",
		"//NAS/emul/emulator/Mednafen/mednafen-0.9.32.1-wip-win32/WrapperMednafen.ahk",
		"/D/download/Diablo 1/RUN.ini",
		"//NAS/emul/emulator/PlayStation/ePSXe 1.9.25/WrapperEpsxe2.ahk",
		"/D/download/xbox/Z.wanted",
		"//NAS/emul/image/Apple2e/Action/캡틴 굿나잇 [Captain Goodnight (1985)(Broderbund)]/goodnight.codes.txt",
		"//NAS/emul/emulator/Apple2e/AppleWin1.26NtscAlpha/WrapperAppleWin.ahk",
		"//NAS/emul/emulator/ZZ_Library/FileUtil.ahk",
		"//NAS/emul/emulator/ZZ_Library/ResolutionChanger.ahk",
		"//NAS/emul/emulator/Apple2gs/ActiveGS/xmlTest.ahk",
		"//NAS/emul/emulator/ZZ_Library/Xml.ahk",
		"/D/download/Starcraft/RUN.ahk",
		"/D/download/Starcraft/RUN.ini",
		"/D/download/Starcraft/RUN.reg",
		"//NAS/game-PC/STRATEGY/스타크래프트 1 [StarCraft]/윈도우7 레지스트리 등록/scbw116_x64.reg",
		"/D/download/Include file.ahk",
		"/C/NIDE/bin/ide/IntelliJ IDEA 14.1.4/bin/idea64.exe.vmoptions",
		"/C/NIDE/maven/settings.xml",
		"/C/NIDE/bin/ide/IntelliJ IDEA 14.1.4/bin/idea.exe.vmoptions",
		"/C/development/NIDE/workspace/hyperlaunch-3/Modules/WinVICE/WinVICE.ahk",
		"/D/download/xbox/Rayman 3 - Hoodlum Havoc.wanted",
		"/C/development/NIDE/workspace/hyperlaunch-3/Modules/CCS64/CCS64.ahk",
		"/C/development/NIDE/workspace/hyperlaunch-3/Modules/BlueMSX/BlueMSX.ahk",
		"//NAS/emul/image/Apple2gs/rpg/Dragon Wars (1990)(Interplay)/run.activegsxml",
		"//NAS/emul/image/Apple2gs/rpg/Dragon Wars (1990)(Interplay)/temp.2mg",
		"//NAS/emul/image/Apple2gs/puzzle & board/Tetris (1988)(Spectrum Holobyte)/run.activegsxml",
		"//NAS/emul/_tool/DaemonToolsImageCompress/DaemonToolsImageCompress.ahk",
		"/D/game/The Witcher 3/DLC/reg.txt",
		"//NAS/emul/image/Apple2gs/adventure/Police Quest (1987)(Sierra)/run.activegsxml",
		"/D/game/The Witcher 3/RUN.ahk",
		"/D/game/The Witcher 3/RUN.ini",
		"/D/game/The Witcher 3/RUN.reg",
		"/C/Program Files/AutoHotkey/SciTE/user/Styles/tidRich_Zenburn.style.properties",
		"/C/Program Files/AutoHotkey/SciTE/user/Styles/HatOfGod.style.properties",
		"//NAS/emul/emulator/ZZ_Library/Include.ahk",
		"//NAS/emul/emulator/ZZ_Library/xml.ahk",
		"//NAS/emul/emulator/PC9801/NekoProject II 0.84/WrapperNp21nt.ahk",
		"/D/game/The Witcher 3/CBTest.reg",
		"/C/totalCmd/usercmd.ini",
		"/C/Users/Administrator/AppData/Local/Temp/_tcx/0/0/Hdd1/launch.ini",
		"/C/totalCmd/wincmd.ini",
		"/D/game/The Witcher 3/RUN.prop",
		"//NAS/emul/emulator/PC9801/anex86_v2.78_kr/WrapperAnex86.ahk",
		"/D/download/이블위딘tu4적용/patch/decls/renderprogs/global.inc",
		"/D/download/이블위딘tu4적용/patch/fonts/fot_lyrastd_db/24.dat",
		"/D/download/이블위딘tu4적용/patch/decls/renderprogs/skinning_normals.inc",
		"/D/download/이블위딘tu4적용/patch/decls/renderprogs/skinning.inc",
		"/C/Users/Administrator/Desktop/CBTest.reg",
		"//NAS/emul/emulator/ZZ_Library/7Zip.ahk",
		"/D/game/The Witcher 3/RunTest.ahk",
		"/D/game/The Witcher 3/Run.bat",
		"/D/game/The Witcher 3/reg.txt",
		"//NAS/util/App/SimpleLauncher/config/db/config.xml",
		"/D/download/20150125/dosbox.conf",
		"/D/download/Tales of Eternia (J) (Disc 1) [SLPS-03050]/Tales of Eternia (J) (Disc 1) [SLPS-03050]/Tales of Eternia (J) (Disc 1) [SLPS-03050].cue",
		"//NAS/emul/emulator/.project",
		"/C/totalCmd/program/Sublime Text Build 3083 x64/Data/Packages/User/Github Tools.sublime-settings",
		"//NAS/emul/emulator/.project.backup",
		"//NAS/emul/emulator/Mame/mame 0.155/.gitignore",
		"//NAS/emul/emulator/3DO/.gitignore",
		"//NAS/emul/emulator/MSX/.gitignore",
		"//NAS/emul/emulator/Amiga/.gitignore",
		"//NAS/emul/emulator/ZZ_Library/test/7Zip.ahk",
		"//NAS/emul/emulator/Zinc/.gitignore",
		"//NAS/emul/emulator/ZZ_Library/.gitignore",
		"/D/download/Script.ahk",
		"/D/2015-06-17.sl",
		"//NAS/emul/emulator/ZZ_Library/Zip.ahk",
		"//NAS/emul/emulator/.git/config",
		"//NAS/emul/emulator/Apple2e/.gitignore",
		"/D/download/ahkdll-v1-release-master/ahkdll-v1-release-master/Compiler/IconChanger.ahk",
		"/D/download/ahkdll-v1-release-master/ahkdll-v1-release-master/README.md",
		"/C/Users/Administrator/Desktop/apple.reg",
		"//NAS/emul/emulator/Apple2e/AppleWin1.26NtscAlpha/.gitignore",
		"//NAS/emul/emulator/ZZ_Library/Common.ahk",
		"/C/development/NIDE/workspace/hyperlaunch-3/Modules/AppleWin/AppleWin.ahk",
		"/C/totalCmd/program/Sublime Text Build 3083 x64/Data/Packages/User/Default (Windows).sublime-keymap",
		"/C/totalCmd/program/Sublime Text Build 3083 x64/Data/Packages/Default/Default (Windows).sublime-keymap",
		"/C/totalCmd/program/Sublime Text Build 3083 x64/Data/Packages/Default/Preferences.sublime-settings",
		"/C/totalCmd/program/Sublime Text Build 3083 x64/Data/Packages/User/Preferences.sublime-settings",
		"//NAS/emul/emulator/Apple2gs/kegs 0.91-win working frame(no disk images)/src/defcomm.h",
		"//NAS/emul/emulator/Famicom/Fceux-r3079/luaScripts/luabot_framework.lua",
		"/C/Users/Administrator/.emulationstation/es_systems.cfg",
		"/D/download/애플2_문서/apple2_disk_images/apple2_disk_images/neuromancer/Hint, Manual, Wheel, Info, comic with URLs/Hint.txt",
		"/D/download/emulationstation_win32_latest/launch_portable.bat",
		"/C/development/NIDE/workspace/hyperlaunch-3/Modules/DOSBox/DOSBox.ahk",
		"/C/development/NIDE/workspace/hyperlaunch-3/Lib/HyperPause.ahk",
		"/C/development/NIDE/workspace/hyperlaunch-3/Lib/Shared.ahk",
		"/C/development/NIDE/workspace/AutoHotkey/Study/DebugMessage.ahk",
		"/D/development/test/Saturn/.gitignore",
		"/D/download/ahkdll-v1-release-master/ahkdll-v1-release-master/lib/ZipFileRaw.ahk",
		"//NAS/emul/emulator/ZZ_Library/VirtualDisk.ahk",
		"//NAS/emul/emulator/Saturn/.gitignore",
		"//NAS/emul/emulator/ZZ_Library/minizip.ahk",
		"/D/download/ahkdll-v1-release-master/ahkdll-v1-release-master/Compiler/ScriptParser.ahk",
		"/D/download/ahkdll-v1-release-master/ahkdll-v1-release-master/lib/_MemoryLibrary.ahk",
		"/C/development/NIDE/workspace/hyperlaunch-3/Lib/MultiPlayer.ahk",
		"/C/Users/Administrator/.emulationstation/es_settings.cfg",
		"/D/app/Emul/Famicom/nestopiaGit_20141007/nestopia.xml"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"SHIPPUDEN",
			"NARUTO",
			"download",
			"d",
			"&",
			"`",
			"epsxeLaunchType",
			"\n",
			"\">(.|\\n)+?</sql>",
			"id=\"createTbLang\"",
			"id=\".*?\"",
			"id=\"createTbCd\"",
			",",
			"https://firedrop.com/0e53b46c67bd936c,https://firedrop.com/7730f53e49362a5e",
			"OpenROM",
			"\n",
			"\\(Disk.*of.*\\)",
			"\\[.*\\]",
			".zip",
			"d:\\download\\Apple\\Apple_II_GS_TOSEC_2012_04_23\\Apple II GS [TOSEC]\\Apple IIGS - Games (TOSEC-v2010-10-12_CM)\\",
			"\n",
			"\\",
			"\\[.*\\]",
			"\\[.\\]",
			"\\(Disk.*of.*\\)",
			".zip",
			"d:\\download\\Apple\\Apple_II_GS_TOSEC_2012_04_23\\Apple II GS [TOSEC]\\Apple IIGS - Games (TOSEC-v2010-10-12_CM)",
			"Dir",
			"dir",
			"bootSlot",
			"%d",
			"font",
			"save",
			"()\n",
			"default",
			"\">",
			"<a href=\"",
			"<img src=\"http://i1.daumcdn.net/cfs.tistory",
			"<a href=\"http://nemo838.tistory.com/attachment",
			"A_LoopReadLine",
			":=",
			" :=",
			":=",
			"bindValue",
			"REG_BINARY",
			"REG_EXPAND_SZ",
			"REG_MULTI_SZ",
			"REG_QWORD",
			"REG_DWORD",
			"file",
			"IniWrite",
			"HDD%a_index%FILE",
			"a_index",
			" :: Emul - ",
			"\"groupName\" : \"Emul - ",
			"\\",
			"7Zip.gop.dllName \"",
			"_dosTime",
			"_dosDate",
			"_overwrite",
			"_recursion",
			"getDate",
			"_run",
			"7Zip.op.",
			"hwnd",
			"_run(commandline)",
			"%7Zip.op.dllName%",
			"\"7-zip64\\",
			"opt",
			"nSize",
			"7Zip_DosDate",
			"7Zip_DosTime",
			"_dosDateTimeToStr",
			"7Zip_DosDateTimeToStr",
			"7Zip_DosDate",
			"7Zip_.opt",
			"_overwrite",
			"7Zip__Overwrite",
			"7Zip",
			"7Zip__Recursion",
			"opt",
			"add",
			"7Zip_",
			" ;End Function",
			" ;End Function  ",
			"_run",
			"7Zip__SevenZip",
			"7Zip_",
			"7-zip32\\",
			"quit",
			"left",
			"next_view_in_stack",
			"if",
			"7z",
			"Log(",
			"7z",
			"Int ,",
			"Int",
			"UInt",
			"zipHandle",
			"MZ_",
			"\n",
			"\"",
			"\n",
			"14:48:28.541 DEBUG (NXmlTest.java:25) ",
			"\\\\NAS\\emul\\Famicom\\emulator\\nestopiaGit_20141007",
			"%\"\n",
			"worker",
			"diskNumber",
			"font",
			"menu",
			"imageDir",
			"imageFilePath",
			"\n		",
			"VirtualDisk",
			"this.path",
			"path",
			"this",
			"this.",
			"this",
			"rc",
			"vd",
			"VirtualDisk"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": true,
		"regex": true,
		"replace_history":
		[
			"'",
			"",
			"\n",
			"\\\\NAS\\emul\\emulator\\Famicom\\nestopiaGit_20141007",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/download/FALCOM ZWEI/ZWEI/REG 등록(32,64bit 공용).reg",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 280,
						"regions":
						{
						},
						"selection":
						[
							[
								247,
								247
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "ZZ_Study/run/RUN.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8766,
						"regions":
						{
						},
						"selection":
						[
							[
								1353,
								1353
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/AutoHotkey/AutoHotkey.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1020.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "//NAS/Download/ps3netsrv/ps3netsrv/common.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2018,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 184.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Wrapper.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"diskco",
				"ZZ_Library\\DiskContainer.ahk"
			],
			[
				"7zip",
				"ZZ_Library\\7Zip.ahk"
			],
			[
				"diskcon",
				"ZZ_Library\\DiskContainer.ahk"
			],
			[
				"wrapperappl",
				"Apple2e\\AppleWin1.26NtscAlpha\\WrapperAppleWin.ahk"
			],
			[
				"wrapper",
				"PC9801\\NekoProject II 0.84\\WrapperNp21nt.ahk"
			],
			[
				".gitignore",
				"3DO\\.gitignore"
			],
			[
				"virtual",
				"ZZ_Library\\VirtualDisk.ahk"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "wrapp",
		"selected_items":
		[
			[
				"wrapp",
				"\\\\NAS\\emul\\emulator\\Wrapper.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"isAttemptOk"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 166.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
